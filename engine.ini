;
; engine-defaults, do not modify
;
[ENGINE]
; do multithreading
bMultiThreaded = true
; maximum number of threads for model batching (0 = let the engine decide based on the number of available cores)
iMaxGeometryWorkerThreads = 0
; maximum elapsed delta time before forced exit
fMaxDeltaTimeCrash = 60.0
; OOPSIE WOOPSIE!! Uwu We make a fucky wucky!! A wittle fucko boingo! The code monkeys at our headquarters are working VEWY HAWD to fix this!
bOopsieWoopsie = 0
; window manager (0 = GLFW)
iWindowManager = 0
; use window manager time or jvm time
bUseWindowTime = 1

[DISPLAY]
iDisplayWidth = 1600
iDisplayHeight = 900
iVerticalSync = 0

[RESOURCES]
sResourceDirectory = %\\resources\\
bShaderAllowInternal = 0
sShaderDirectory = \\shaders\\
sShaderBCDirectory = \\shaders\\compiled\\
; compile shader when requested
sShaderRecompilePrecomputeRuntime = 1
; pre-compile all shaders at runtime vs. compile them on the side when needed
bShaderPrecompileAllRuntime = 0
sShaderInternalPath = &\\resources\\shaders\\
sTextureDirectory = \\textures\\
sMaterialDefinitionDirectory = \\materials\\
sFontsDirectory = \\textures\\fonts\\
sConfigDirectory = \\cfg\\

[AUDIO]
; placeholder
iAudioChannels = 32
iSoundFrequency = 22050

[PHYSICS]
; physics engine (0 = JBullet (deprecated), 1 = libGDX Bullet bindings)
iPhysicsEngine = 1
; multithread physics (faster but up to 2 ticks delayed before barrier)
bPhysicsMultithreaded = 1
; maximum number of rigid bodies
iPhysicsMaxRigidBodies = 2048
; physics iterations per tick
iPhysicsTickIterations = 1
; minimum margin
fPhysicsMinMargin = 0.0001

[RENDER]
; rendering api (0 = OpenGL Renderer, 1 = Vulkan (soon, hopefully), 2 = DirectX (maybe someday...))
iRenderingAPI = 0
; maximum size of batch vertex arrays in bytes
iMaxBatchSize = 32,767

[SHADER]
; allow include statements in shaders
bAllowInclude = true
sVSFormat = "vs"
sFSFormat = "fs"
sGSFormat = "gs"
sCSFormat = "cs"
sFilterFormat = "filter"

[LIGHTING]
fMaxGamma = 3.0
fMinGamma = 1.0
iMaxPointLights = 256
iMaxDirectionalLights = 256
iDefaultAttenuationModel = 0

[CONTROL]
; placeholder

[MEMORY]
bUnsafeByteBuffers = 1