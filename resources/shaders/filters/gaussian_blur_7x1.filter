#include "filters/filter.h"
#include "shared.h"
#include "directional_light.h"

uniform vec3 u_scale;

in VS_OUT
{
  vec2 uv;
} i;

void main()
{
  vec4 color = vec4(0.0f);

  color += texture(u_color, i.uv + (vec2(-3.0) * u_scale.xy)) * (1.0 / 64.0);
  color += texture(u_color, i.uv + (vec2(-2.0) * u_scale.xy)) * (6.0 / 64.0);
  color += texture(u_color, i.uv + (vec2(-1.0) * u_scale.xy)) * (15.0 / 64.0);
  color += texture(u_color, i.uv + (vec2(0.0) * u_scale.xy))  * (20.0 / 64.0);
  color += texture(u_color, i.uv + (vec2(1.0) * u_scale.xy))  * (15.0 / 64.0);
  color += texture(u_color, i.uv + (vec2(2.0) * u_scale.xy))  * (6.0 / 64.0);
  color += texture(u_color, i.uv + (vec2(3.0) * u_scale.xy))  * (1.0 / 64.0);

  gl_FragColor = color;
}